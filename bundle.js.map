{"version":3,"file":"bundle.js","sources":["../360402ef4e8a5e8f5579eabc614a89","../lib/main.js"],"sourcesContent":["export default '/home/runner/work/datasets-cmudict/datasets-cmudict/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar format = require( '@stdlib/string-format' );\nvar readJSON = require( '@stdlib/fs-read-json' ).sync;\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar keys = [ 'dict', 'phones', 'symbols', 'vp' ];\nvar dataCMU = {\n\t'dict': resolve( __dirname, '..', 'data', 'dict.json' ),\n\t'phones': resolve( __dirname, '..', 'data', 'phones.json' ),\n\t'symbols': resolve( __dirname, '..', 'data', 'symbols.json' ),\n\t'vp': resolve( __dirname, '..', 'data', 'vp.json' )\n};\nvar fopts = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns datasets from the Carnegie Mellon Pronouncing Dictionary (CMUdict).\n*\n* ## Notes\n*\n* -   This function synchronously reads data from disk for each invocation. Such behavior is intentional and so is the avoidance of `require`. We assume that invocations are infrequent, and we want to avoid the `require` cache. This means that we allow data to be garbage collected and a user is responsible for explicitly caching data.\n*\n*\n* @param {Options} [options] - options object\n* @param {string} [options.data] - dataset name\n* @throws {Error} unable to read data\n* @throws {TypeError} must provide an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} must provide a recognized dataset name\n* @returns {(Object|StringArray)} dataset(s)\n*\n* @example\n* var data = cmudict();\n* // returns <Object>\n*\n* @example\n* var data = cmudict({\n*\t'data': 'symbols'\n* });\n* // returns <Array>\n*/\nfunction cmudict( options ) {\n\tvar opts;\n\tvar err;\n\tvar key;\n\tvar out;\n\tvar val;\n\tvar i;\n\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.data ) {\n\t\t\tif ( !hasOwnProp( dataCMU, opts.data ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'data', keys.join( '\", \"' ), opts.data ) );\n\t\t\t}\n\t\t\tout = readJSON( dataCMU[ opts.data ], fopts );\n\t\t\tif ( out instanceof Error ) {\n\t\t\t\tthrow out;\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n\tout = {};\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tval = readJSON( dataCMU[ key ] );\n\t\tif ( val instanceof Error ) {\n\t\t\tthrow val;\n\t\t}\n\t\tout[ key ] = val;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cmudict;\n"],"names":["__dirname","resolve","require","format","readJSON","sync","hasOwnProp","validate","keys","dataCMU","dict","phones","symbols","vp","fopts","encoding","module","exports","options","opts","err","key","out","val","i","arguments","length","data","RangeError","join","Error"],"mappings":";ifAAe,IAAAA,EAAA,0DCsBXC,EAAUC,QAAS,QAASD,QAC5BE,EAASD,QAAS,yBAClBE,EAAWF,QAAS,wBAAyBG,KAC7CC,EAAaJ,QAAS,mCACtBK,EAAWL,QAAS,iBAKpBM,EAAO,CAAE,OAAQ,SAAU,UAAW,MACtCC,EAAU,CACbC,KAAQT,EAASD,EAAW,KAAM,OAAQ,aAC1CW,OAAUV,EAASD,EAAW,KAAM,OAAQ,eAC5CY,QAAWX,EAASD,EAAW,KAAM,OAAQ,gBAC7Ca,GAAMZ,EAASD,EAAW,KAAM,OAAQ,YAErCc,EAAQ,CACXC,SAAY,eAwEbC,OAAOC,QAxCP,SAAkBC,GACjB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKC,UAAUC,OAAS,EAAI,CAG3B,GADAN,EAAMb,EADNY,EAAO,GACeD,GAErB,MAAME,EAEP,GAAKD,EAAKQ,KAAO,CAChB,IAAMrB,EAAYG,EAASU,EAAKQ,MAC/B,MAAM,IAAIC,WAAYzB,EAAQ,gFAAiF,OAAQK,EAAKqB,KAAM,QAAUV,EAAKQ,OAGlJ,IADAL,EAAMlB,EAAUK,EAASU,EAAKQ,MAAQb,cAClBgB,MACnB,MAAMR,EAEP,OAAOA,GAIT,IADAA,EAAM,GACAE,EAAI,EAAGA,EAAIhB,EAAKkB,OAAQF,IAAM,CAGnC,GAFAH,EAAMb,EAAMgB,IACZD,EAAMnB,EAAUK,EAASY,eACLS,MACnB,MAAMP,EAEPD,EAAKD,GAAQE,EAEd,OAAOD"}